(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"0ox8":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return p}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var a=n("/FXl"),s=n("TjRS");n("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/views/installation.mdx"}});var c={_frontmatter:o},l=s.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,["components"]);return Object(a.b)(l,r({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"installation"},"Installation"),Object(a.b)("p",null,"To make this library to work you need to provide ts-auto-mock transformer at compile time.\nUnfortunately, TypeScript itself does not currently provide any easy way to use custom transformers."),Object(a.b)("p",null,Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/Microsoft/TypeScript/issues/14419"}),"See typescript issue"),"."),Object(a.b)("p",null,"There are different ways to do it based on how you are currently compiling your typescript files"),Object(a.b)("h2",{id:"jest--ts-jest--ttypescript"},"jest + ts jest + ttypescript"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"install the dependencies")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"npm install jest ts-jest typescript ttypescript jest-ts-auto-mock ts-auto-mock\n")),Object(a.b)("p",null,"you need ttypescript to allow typescript transformer"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"add the transformer to the tsconfig.json")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'...\n"compilerOptions": {\n    "plugins": [\n      {\n        "transform": "ts-auto-mock/transformer",\n        "cacheBetweenTests": false\n      }\n    ]\n...\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Remember to set cacheBetweenTests to false because jest runs test in parallel and ts-auto-mock doesn't support yet the cache\nbetween parallel tests"),Object(a.b)("li",{parentName:"ul"},"you can find a json example ",Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/Typescript-TDD/jest-ts-auto-mock/blob/master/examples/ts-jest-ttypescript/tsconfig.json"}),"here"))),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"add ts-jest to the transformation pattern in the jest config")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'...\n "jest": {\n    "transform": {\n        ".(ts|tsx)": "ts-jest"\n    }\n  }\n...\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"you can find a json example ",Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/Typescript-TDD/jest-ts-auto-mock/blob/master/examples/ts-jest-ttypescript/package.json"}),"here"))),Object(a.b)("ol",{start:4},Object(a.b)("li",{parentName:"ol"},"add ttypescript to be used as ts jest compiler")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'...\n"jest": {\n    "globals": {\n      "ts-jest": {\n        "compiler": "ttypescript"\n      }\n    }\n}\n...\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"you can find a json example ",Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/Typescript-TDD/jest-ts-auto-mock/blob/master/examples/ts-jest-ttypescript/package.json"}),"here"))),Object(a.b)("ol",{start:5},Object(a.b)("li",{parentName:"ol"},"add jest-ts-auto-mock config file to your setup file")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'...\n"jest": {\n    "setupFiles": [\n      "<rootDir>config.ts"\n    ]\n }\n...\n')),Object(a.b)("p",null,"// config.ts"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-ts"}),'import "jest-ts-auto-mock";\n')),Object(a.b)("p",null,Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/Typescript-TDD/jest-ts-auto-mock/blob/master/examples/ts-jest-ttypescript/config.ts"}),"Example")),Object(a.b)("ol",{start:6},Object(a.b)("li",{parentName:"ol"},"Create your first test")),Object(a.b)("p",null,"// test.test.ts"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-ts"}),"import { createMock } from \"ts-auto-mock\";\n\ninterface Interface {\n        a: string;\n        b: number;\n}\n\ndescribe('reuse', () => {\n    let mock: Interface;\n\n    beforeEach(() => {\n\n        mock = createMock<Interface>();\n    });\n\n    it('should work', () => {\n        expect(mock.a).toBe(\"\");\n    });\n});\n\n")),Object(a.b)("ol",{start:7},Object(a.b)("li",{parentName:"ol"},"run your test")),Object(a.b)("p",null,"// package.json"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'...\n  "scripts": {\n    "test": "jest"\n  }\n...\n')),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"npm run test\n")),Object(a.b)("p",null,"All Done!!!"),Object(a.b)("h2",{id:"webpack"},"webpack"),Object(a.b)("p",null,"You can use awesome-typescript-loader or ts-loader"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"// webpack.config.js\nconst tsAutoMockTransformer = require('ts-auto-mock/transformer').default;\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.ts$/,\n        loader: 'ts-loader', // or 'awesome-typescript-loader'\n        options: {\n          getCustomTransformers: program => ({\n              before: [\n                  tsAutoMockTransformer(program)\n              ]\n          })\n        }\n      }\n    ]\n  }\n};\n")),Object(a.b)("h2",{id:"ttypescript"},"ttypescript"),Object(a.b)("p",null,"See ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/cevek/ttypescript/blob/master/README.md"}),"ttypescript's README")," for more information"),Object(a.b)("p",null,"tsconfig.json"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'{\n  "compilerOptions": {\n    //...,\n    "plugins": [\n      { "transform": "ts-auto-mock/transformer" }\n    ]\n  },\n  //...\n}\n')),Object(a.b)("h2",{id:"ts-patch"},"ts-patch"),Object(a.b)("p",null,"See ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/nonara/ts-patch/blob/master/README.md"}),"ts-patch's README")),Object(a.b)("p",null,"Command to run to install it:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"npm i ts-patch\nts-patch install\n")),Object(a.b)("p",null,"tsconfig.json"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-json"}),'{\n  "compilerOptions": {\n    //...,\n    "plugins": [\n      { "transform": "ts-auto-mock/transformer" }\n    ]\n  },\n  //...\n}\n')),Object(a.b)("h2",{id:"ts-node"},"ts-node"),Object(a.b)("h3",{id:"mocha"},"mocha"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"// tsnode.js\nconst tsAutoMockTransformer = require('ts-auto-mock/transformer').default;\n\nrequire(\"ts-node\").register({\n  transformers: program => ({\n    before: [\n      tsAutoMockTransformer(program)\n    ]\n  })\n});\n")),Object(a.b)("p",null,"Command to run:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"mocha --require './tsnode.js' --watch-extensions ts,tsx \"test/**/*.{ts,tsx}\n")))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/views/installation.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-views-installation-mdx-f79e32dc2c928badacf7.js.map