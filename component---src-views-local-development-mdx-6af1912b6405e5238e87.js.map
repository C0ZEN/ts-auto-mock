{"version":3,"sources":["webpack:///../src/views/local-development.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,uHACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,sBACE,kBAAIC,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,OACA,kBAAIA,WAAW,MAAf,4BAEF,iBAAQ,CACN,GAAM,8BADR,8BAGA,sBACE,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kBAEL,iBAAQ,CACN,GAAM,yBADR,yBAGA,sBACE,kBAAIA,WAAW,MAAf,sBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,oBAEL,iBAAQ,CACN,GAAM,iBADR,iBAGA,6KACA,sBACE,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,UAEF,2DACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gCAEL,yDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,4BAEL,iBAAQ,CACN,GAAM,qBADR,qBAGA,mFACA,sBACE,kBAAIA,WAAW,MAAf,+BAAoD,kBAAIA,WAAW,MAC/D,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,oBAAyC,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,IAA3B,uGAIlE,kBAAIA,WAAW,MAAf,qBAA0C,kBAAIA,WAAW,MACrD,kBAAIA,WAAW,MAAf,iBAAsC,mBAAGA,WAAW,MAAS,CACzD,KAAQ,kGAD0B,uBAGtC,kBAAIA,WAAW,MAAf,qBACA,kBAAIA,WAAW,MAAf,8CAAmE,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,IAA3B,+BAExF,kBAAIA,WAAW,MAAf,8DAAmF,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,IAA3B,mCAI9G,oC,wMAKJJ,EAAWK,gBAAiB","file":"component---src-views-local-development-mdx-6af1912b6405e5238e87.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ts-auto-mock/ts-auto-mock/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"local-development\"\n    }}>{`Local development`}</h1>\n    <p>{`If you want to add a new functionality of fix a bug in ts-auto-mock you are in the right place`}</p>\n    <h2 {...{\n      \"id\": \"pre-requisite\"\n    }}>{`Pre requisite`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`node >= 10`}</li>\n      <li parentName=\"ul\">{`npm`}</li>\n      <li parentName=\"ul\">{`the repo cloned locally`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install-local-dependencies\"\n    }}>{`Install local dependencies`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Make sure you are in the root folder`}</li>\n      <li parentName=\"ul\">{`run npm install`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-the-transformer\"\n    }}>{`Build the transformer`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`run npm run build`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run build\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"make-a-change\"\n    }}>{`Make a change`}</h2>\n    <p>{`Ts auto mock has multiple modules, each of them has a different meaning and depending of what you are editing you can just re build the specific one`}</p>\n    <ul>\n      <li parentName=\"ul\">{`transformer`}</li>\n      <li parentName=\"ul\">{`repository`}</li>\n      <li parentName=\"ul\">{`extension`}</li>\n      <li parentName=\"ul\">{`merge`}</li>\n    </ul>\n    <p>{`If you are editing the transformer`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run build:transformer\n`}</code></pre>\n    <p>{`If you are editing anything else`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run build:modules\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"test-your-changes\"\n    }}>{`Test your changes`}</h2>\n    <p>{`There are 2 ways to test the effectiveness of your changes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use the existing test system`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`add a test`}</li>\n          <li parentName=\"ul\">{`run all the tests`}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    npm run test\n    // use npm run test:transformer if you are just editing the transformer\n`}</code></pre></li>\n        </ul></li>\n      <li parentName=\"ul\">{`use the Playground`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`open the file `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/Typescript-TDD/ts-auto-mock/blob/master/test/playground/playground.test.ts\"\n            }}>{`playground.test.ts`}</a></li>\n          <li parentName=\"ul\">{`make your changes`}</li>\n          <li parentName=\"ul\">{`run test playground to see the test passing`}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`npm run test:playground\n`}</code></pre></li>\n          <li parentName=\"ul\">{`run build playground to see the output of the generate code`}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`npm run build:playground\n`}</code></pre></li>\n        </ul></li>\n    </ul>\n    <p>{`That's it.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}