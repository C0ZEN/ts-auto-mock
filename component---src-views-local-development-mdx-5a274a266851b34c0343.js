(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{wuhz:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return o}));n("1c7q"),n("abGl"),n("gZHo"),n("Fdmb"),n("Ir+3"),n("2mQt");var a=n("/FXl"),r=n("TjRS");n("aD51");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/views/local-development.mdx"}});var u={_frontmatter:b},c=r.a;function o(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(c,l({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"local-development"},"Local development"),Object(a.b)("p",null,"If you want to add a new functionality of fix a bug in ts-auto-mock you are in the right place"),Object(a.b)("h2",{id:"pre-requisite"},"Pre requisite"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"node >= 10"),Object(a.b)("li",{parentName:"ul"},"npm"),Object(a.b)("li",{parentName:"ul"},"the repo cloned locally")),Object(a.b)("h2",{id:"install-local-dependencies"},"Install local dependencies"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Make sure you are in the root folder"),Object(a.b)("li",{parentName:"ul"},"run npm install")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm install\n")),Object(a.b)("h2",{id:"build-the-transformer"},"Build the transformer"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"run npm run build")),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build\n")),Object(a.b)("h2",{id:"make-a-change"},"Make a change"),Object(a.b)("p",null,"Ts auto mock has multiple modules, each of them has a different meaning and depending of what you are editing you can just re build the specific one"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"transformer"),Object(a.b)("li",{parentName:"ul"},"repository"),Object(a.b)("li",{parentName:"ul"},"extension"),Object(a.b)("li",{parentName:"ul"},"merge")),Object(a.b)("p",null,"If you are editing the transformer"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:transformer\n")),Object(a.b)("p",null,"If you are editing anything else"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:modules\n")),Object(a.b)("h2",{id:"test-your-changes"},"Test your changes"),Object(a.b)("p",null,"There are 2 ways to test the effectiveness of your changes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Use the existing test system",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"add a test"),Object(a.b)("li",{parentName:"ul"},"run all the tests",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"    npm run test\n    // use npm run test:transformer if you are just editing the transformer\n"))))),Object(a.b)("li",{parentName:"ul"},"use the Playground",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"open the file ",Object(a.b)("a",l({parentName:"li"},{href:"https://github.com/Typescript-TDD/ts-auto-mock/blob/master/test/playground/playground.test.ts"}),"playground.test.ts")),Object(a.b)("li",{parentName:"ul"},"make your changes"),Object(a.b)("li",{parentName:"ul"},"run test playground to see the test passing",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"npm run test:playground\n"))),Object(a.b)("li",{parentName:"ul"},"run build playground to see the output of the generate code",Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:playground\n")))))),Object(a.b)("p",null,"That's it."))}o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/views/local-development.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-views-local-development-mdx-5a274a266851b34c0343.js.map